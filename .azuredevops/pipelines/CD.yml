trigger: none

name: 'Deploy Application'
pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: name
    value: mscnet7dapracasample
  
  - name: location
    value: eastus

stages:
  - stage: ContainerizeApp
    displayName: Containerize .NET Application
    jobs:
      - job: BuildDotNet
        displayName: Build .NET App
        steps:
          - task: UseDotNet@2
            displayName: 'Use .NET'
            inputs:
              version: 7.x
          - task: DotNetCoreCLI@2
            name: Build
            inputs:
              command: 'build'
              projects: ./source
              arguments: '--configuration Release'
  - stage: ProvisionAzure
    displayName: Provision Azure resources
    jobs:
      - job: DeployBicep
        displayName: Deploy Bicep file
        steps:
          - task: AzureCLI@2
            name: BicepDeploy
            displayName: Azure CLI deployment
            inputs:
              azureSubscription: $(AZURE_SERVICE_CONNECTION)
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az deployment sub create --location $(location) --template-file ./infra/main.bicep  --parameters name=$(name) location=$(location)

                echo "Capturing outputs . . ."
                echo $outputs | jq -c '.properties.outputs | to_entries[] | [.key, .value.value]' |
                  while IFS=$"\n" read -r c; do
                    outputname=$(echo "$c" | jq -r '.[0]')
                    outputvalue=$(echo "$c" | jq -r '.[1]')
                    echo "##vso[task.setvariable variable=$outputname;isOutput=true]$outputvalue"
                  done
      - job: PublishApp
        displayName: Publish container app
        dependsOn: ProvisionAzure
        variables:
            acrLoginServer: $[ dependencies.ProvisionAzure.outputs['BicepDeploy.azurE_CONTAINER_REGISTRY_ENDPOINT'] ]
        steps:
          - task: Bash@3
            inputs:
              targetType: inline
              script: echo $(acrLoginServer)



              
          # - task: PublishPipelineArtifact@1
          #   displayName: Publish Artifact
          #   inputs:
          #     targetPath: "$(Build.ArtifactStagingDirectory)/bicep"
          #     artifact: bicep
# See https://github.com/Azure/bicep/issues/4638#issuecomment-932214561